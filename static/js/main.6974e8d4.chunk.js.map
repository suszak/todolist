{"version":3,"sources":["containers/Header/Header.js","components/NavBar/NavBar.js","components/ToDoItem/ToDoItem.js","components/ToDoList/ToDoList.js","containers/Main/Main.js","containers/Footer/Footer.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","NavBar","props","handleChange","deadline","a","setState","startDate","updateDate","state","clearTimeout","blurTimeoutDeadline","inputFocused","sectionName","document","querySelector","classList","add","remove","inputUnfocused","value","moveLabel","bind","id","htmlFor","type","name","onChange","this","updateDraft","onFocus","blurTimeoutTask","onBlur","setTimeout","draft","updateCity","blurTimeoutCity","city","selected","dateFormat","withPortal","onClick","updateTaskList","ToDoItem","temp","weather","hidden","actualDate","Date","tommorow","getFullYear","getMonth","getDate","getWeatherFromApi","fetch","task","response","status","json","Math","round","main","description","console","error","then","done","changeImportantState","important","changeState","toLocaleDateString","deleteTask","ToDoList","tasks","map","key","Main","event","target","indexOf","tasksArray","idArray","push","max","sortingTasks","taskId","newArray","splice","findIndex","index","importantArray","unimportantArray","sort","b","sortedArray","localTasksArray","JSON","stringify","join","localStorage","setItem","Footer","App","tasksList","getItem","tasksArrayString","split","parse","forEach","element","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6974e8d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return(\r\n            <header className='header'>\r\n                <h1 className='header__title'>ToDo list:</h1>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header ","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport './NavBar.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass NavBar extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            startDate: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n        \r\n    handleChange = async (deadline) => {\r\n        await this.setState({\r\n                startDate: deadline\r\n        });\r\n        \r\n        await this.props.updateDate(this.state.startDate);\r\n        clearTimeout(this.blurTimeoutDeadline);\r\n        // document.querySelector('.deadline__label').classList.add('deadline__label--active');\r\n    }\r\n    \r\n\r\n    inputFocused = (sectionName) => {\r\n        document.querySelector(`.${sectionName}__label`).classList.add(`${sectionName}__label--active`);\r\n        document.querySelector(`#${sectionName}Tooltip`).classList.remove('tooltip--visible');\r\n        document.querySelector(`#${sectionName}TooltipSign`).classList.remove('tooltip--visible');\r\n    }\r\n\r\n    inputUnfocused = (sectionName) => {\r\n        if (!document.querySelector(`.${sectionName}__input`).value) {\r\n            document.querySelector(`.${sectionName}__label`).classList.remove(`${sectionName}__label--active`);\r\n        }\r\n    }\r\n\r\n    moveLabel = () => {\r\n        if(!document.querySelector('.task__input').value) {\r\n            document.querySelector('.task__label').classList.remove('task__label--active');\r\n        }\r\n\r\n        if(!document.querySelector('.city__input').value) {\r\n            document.querySelector('.city__label').classList.remove('city__label--active');\r\n        }\r\n\r\n        if(!document.querySelector('.deadline__input').value) {\r\n            document.querySelector('.deadline__label').classList.remove('deadline__label--active');\r\n        }\r\n    }\r\n\r\n    blurTimeoutTask;\r\n    blurTimeoutCity;\r\n    blurTimeoutDeadline;\r\n\r\n    render() {\r\n        return(\r\n            <nav className=\"navigationBar\">\r\n                <section className='task'>\r\n                    <div className='tooltip' id='taskTooltip'>It cannot be empty!</div>\r\n                    <div className='tooltip' id='taskTooltipSign'>Don't use '|' inside!</div>\r\n                    <label htmlFor='taskInput' className='task__label'>Type your task here...</label>\r\n                    <input type='text' name='taskInput' className='task__input' id='draftInput' onChange={this.props.updateDraft} onFocus={() => {this.inputFocused('task'); clearTimeout(this.blurTimeoutTask)}} onBlur={() => {this.blurTimeoutTask = setTimeout(() => {this.inputUnfocused('task')}, 5000);}} value={this.props.state.draft}></input>\r\n                </section>\r\n                <section className='city'>\r\n                    <div className='tooltip' id='cityTooltip'>It cannot be empty!</div>\r\n                    <div className='tooltip' id='cityTooltipSign'>Don't use '|' inside!</div>\r\n                    <label htmlFor='cityInput' className='city__label'>Type location here...</label>\r\n                    <input type='text' name='cityInput' className='city__input' id='cityInput' onChange={this.props.updateCity} onFocus={() => {this.inputFocused('city'); clearTimeout(this.blurTimeoutCity)}} onBlur={() => {this.blurTimeoutCity = setTimeout(() => {this.inputUnfocused('city')}, 5000);}} value={this.props.state.city}></input>\r\n                </section>\r\n                <section className='deadline'>\r\n                    <div className='tooltip' id='deadlineTooltipSign'>Don't use '|' inside!</div>\r\n                    <div className='tooltip' id='deadlineTooltip'>It cannot be empty!</div>\r\n                    <label htmlFor='deadlineInput' className='deadline__label'>Set deadline...</label>\r\n                    <DatePicker selected={this.props.state.deadline} onChange={this.handleChange} id='deadlineInput' name='deadlineInput' className='deadline__input' onFocus={() => {this.inputFocused('deadline'); clearTimeout(this.blurTimeoutDeadline)}} onBlur={() => {this.blurTimeoutDeadline = setTimeout(() => {this.inputUnfocused('deadline')}, 5000);}} value={this.state.startDate} dateFormat='dd/MM/yyyy' withPortal/>\r\n                </section>\r\n                <button className='navigationBar__button' onClick={async () => { await this.props.updateTaskList(); this.moveLabel()}}>Add task</button>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar","import React, { Component } from 'react';\r\nimport './ToDoItem.css';\r\n\r\nclass ToDoItem extends Component {\r\n    state = {\r\n        temp: '',\r\n        weather: '',\r\n        hidden: true\r\n    }\r\n\r\n    actualDate = new Date();\r\n    tommorow = new Date(this.actualDate.getFullYear(), this.actualDate.getMonth(), this.actualDate.getDate()+1);\r\n\r\n    getWeatherFromApi = async () => {\r\n        try {\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?appid=0c79a3e8f66a976ec6832ddc76907c72&q=${this.props.task.city}&units=metric&lang=en`);\r\n            if(response.status === 200) {\r\n                const weather = await response.json();\r\n                this.setState({ temp: 'Temperature: '+Math.round(weather.main.temp)+'°C', weather: weather.weather[0].description });\r\n            } else {\r\n                this.setState({ temp: 'City not found', weather: '' });\r\n            }\r\n        } catch(error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getWeatherFromApi().then(() => {\r\n            this.setState({hidden: false});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <section className={((this.props.task.done === false) && (this.props.task.deadline < this.tommorow))?'todoItem todoItem--warning':'todoItem'}>\r\n                <span className='todoItem__importantSign' onClick={() => {this.props.changeImportantState(this.props.task.id)}}>\r\n                    <span className={this.props.task.important?'hidden':''}>\r\n                        <i className='far fa-star'></i>\r\n                    </span>\r\n                    <span className={this.props.task.important?'':'hidden'}>\r\n                        <i className='fas fa-star'></i>\r\n                    </span>\r\n                </span>\r\n                <span className={this.props.task.done?'todoItem__name todoItem__name--done':'todoItem__name'} onClick={() => {this.props.changeState(this.props.task.id)}} ><span>{this.props.task.name}</span></span>\r\n                <span className={(this.props.task.deadline >= this.tommorow)?'todoItem__deadline':'todoItem__deadline todoItem__deadline--afterDate'}>{this.props.task.deadline.toLocaleDateString('pl-PL')}</span>\r\n                <span className='todoItem__city'>{this.props.task.city}</span>\r\n                <section className={this.state.hidden?'weather':'weather weather--hidden'}>\r\n                    <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n                </section>\r\n                <section className={this.state.hidden?'weather weather--hidden':'weather'}>\r\n                    <span className='weather__temp'>{this.state.temp}</span>\r\n                    <span className='weather__info'>{this.state.weather}</span>\r\n                </section>\r\n                <span onClick={() => {this.props.deleteTask(this.props.task.id)}} className='todoItem__delete'><i className='fas fa-minus-circle'></i></span>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoItem","import React, { Component } from 'react';\r\nimport './ToDoList.css';\r\nimport ToDoItem from '../ToDoItem/ToDoItem';\r\n\r\nclass ToDoList extends Component {\r\n    render() {\r\n        return(\r\n            <section className='todoList'>\r\n                {(this.props.state.tasks !== '')?this.props.state.tasks.map((task) => <ToDoItem task={task} deleteTask={this.props.deleteTask} changeState={this.props.changeState} changeImportantState={this.props.changeImportantState} key={task.id}/>):''}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList","import React, { Component } from 'react';\r\nimport './Main.css';\r\nimport NavBar from '../../components/NavBar/NavBar'\r\nimport ToDoList from '../../components/ToDoList/ToDoList'\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        tasks: this.props.tasks,\r\n        draft: '',\r\n        city: '',\r\n        deadline: '',\r\n        important: ''\r\n    }\r\n\r\n    // Update draft input value:\r\n    updateDraft = (event) => {\r\n        this.setState({draft: event.target.value});\r\n    }\r\n\r\n    // Update city input value:\r\n    updateCity = (event) => {\r\n        this.setState({city: event.target.value});\r\n    }\r\n\r\n    // Update deadline input value:\r\n    updateDate = (value) => {\r\n        this.setState({deadline: value});\r\n    }\r\n\r\n    // Add new task:\r\n    updateTaskList = () => {\r\n        if(!this.state.draft || !this.state.city || !this.state.deadline || this.state.draft.indexOf('|') !== -1 || this.state.city.indexOf('|') !== -1) {\r\n            if(!this.state.draft) {\r\n                document.querySelector('#draftInput').classList.add('task__input--empty');\r\n                document.querySelector('#taskTooltip').classList.add('tooltip--visible');\r\n            } if(!this.state.city) {\r\n                document.querySelector('#cityInput').classList.add('city__input--empty');\r\n                document.querySelector('#cityTooltip').classList.add('tooltip--visible');\r\n            } if(!this.state.deadline) {\r\n                document.querySelector('#deadlineInput').classList.add('deadline__input--empty');\r\n                document.querySelector('#deadlineTooltip').classList.add('tooltip--visible');\r\n            }\r\n            if(this.state.draft.indexOf('|') !== -1) {\r\n                document.querySelector('#draftInput').classList.add('task__input--empty');\r\n                document.querySelector('#taskTooltipSign').classList.add('tooltip--visible');\r\n            } if(this.state.city.indexOf('|') !== -1) {\r\n                document.querySelector('#cityInput').classList.add('city__input--empty');\r\n                document.querySelector('#cityTooltipSign').classList.add('tooltip--visible');\r\n            }\r\n        } else {\r\n            let tasksArray = this.state.tasks;\r\n            const idArray = tasksArray.map(task => {\r\n                    return task.id;\r\n                }\r\n            );\r\n            \r\n            document.querySelector('#draftInput').classList.remove('task__input--empty');\r\n            document.querySelector('#cityInput').classList.remove('city__input--empty');\r\n\r\n            tasksArray.push({name: this.state.draft, city: this.state.city, id: (Math.max(...idArray)<0)?0:Math.max(...idArray)+1, deadline: this.state.deadline, done: false, important: false});\r\n            this.setState({tasks: tasksArray, draft: '', city: '', deadline: ''}, this.sortingTasks);\r\n        }\r\n    }\r\n\r\n    // Delete task:\r\n    deleteTask = (taskId) => {\r\n        let idArray = this.state.tasks.map(task => {\r\n            return task.id;\r\n        });\r\n\r\n        let newArray = this.state.tasks;\r\n        newArray.splice(idArray.findIndex((value) => {\r\n            return value === taskId;\r\n        }), 1);\r\n        \r\n        this.setState({tasks: newArray}, this.sortingTasks);\r\n    }\r\n\r\n    // Change state done/todo\r\n    changeState = (taskId) => {\r\n        const idArray = this.state.tasks.map(task => {\r\n            return task.id;\r\n        });\r\n        const index = idArray.findIndex((value) => {\r\n            return value === taskId;\r\n        });\r\n\r\n        let newArray = this.state.tasks;\r\n        \r\n        newArray[index] = {name: newArray[index].name, id: newArray[index].id, city: newArray[index].city, deadline: newArray[index].deadline, done: !newArray[index].done, important: newArray[index].important};\r\n        \r\n        this.setState({tasks: newArray}, this.sortingTasks);\r\n    }\r\n\r\n    // Change important state\r\n    changeImportantState = (taskId) => {\r\n        const idArray = this.state.tasks.map(task => {\r\n            return task.id;\r\n        });\r\n        const index = idArray.findIndex((value) => {\r\n            return value === taskId;\r\n        });\r\n\r\n        let newArray = this.state.tasks;\r\n        \r\n        newArray[index] = {name: newArray[index].name, id: newArray[index].id, city: newArray[index].city, deadline: newArray[index].deadline, done: newArray[index].done, important: !newArray[index].important};\r\n        \r\n        this.setState({tasks: newArray}, this.sortingTasks);\r\n    }\r\n\r\n    // Sorting tasks\r\n    sortingTasks = () => {\r\n        const importantArray = [];\r\n        const unimportantArray = [];\r\n\r\n        if(this.state.tasks !== '') {\r\n            this.state.tasks.map((task) => {\r\n                if(task.important) {\r\n                    importantArray.push(task);\r\n                    return task;\r\n                } else {\r\n                    unimportantArray.push(task);\r\n                    return task;\r\n                }\r\n            })\r\n\r\n            importantArray.sort(function(a, b) {\r\n                return a.deadline - b.deadline;\r\n            })\r\n\r\n            unimportantArray.sort(function(a, b) {\r\n                return a.deadline - b.deadline;\r\n            })\r\n\r\n            const sortedArray = [...importantArray, ...unimportantArray];\r\n            this.setState({tasks: sortedArray});\r\n\r\n            // format array of objects to string\r\n            let localTasksArray = sortedArray.map((task) => {\r\n                return JSON.stringify(task);\r\n            });\r\n  \r\n            localTasksArray = localTasksArray.join('|');\r\n\r\n            // save to local storage\r\n            localStorage.setItem('tasksArray', localTasksArray);\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        // sorting array\r\n        this.sortingTasks();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <main className='main'>\r\n                <NavBar state={this.state} updateDraft={this.updateDraft} updateCity={this.updateCity} updateDate={this.updateDate} updateTaskList={this.updateTaskList} />\r\n                <ToDoList state={this.state} deleteTask={this.deleteTask} changeState={this.changeState} changeImportantState={this.changeImportantState} />\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main ","import React, { Component } from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return(\r\n            <footer className='footer'>\r\n                <section className='text'>\r\n                    <span className='text__info'>Created by: </span>\r\n                    <span className='text__author'>Mateusz</span>\r\n                    <span className='text__author'>Greń</span>\r\n                    <span className='text__date'>2020</span>\r\n                </section>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer ","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport Footer from '../Footer/Footer'\r\n\r\nclass App extends Component {\r\n  tasksList = [];\r\n\r\n  UNSAFE_componentWillMount() {\r\n    // read local storage\r\n    if(!localStorage.getItem('tasksArray')) {\r\n      this.tasksList = [];      \r\n    } else {\r\n      let tasksArrayString = localStorage.getItem('tasksArray');\r\n      tasksArrayString = tasksArrayString.split('|');\r\n\r\n      let tasksArray = tasksArrayString.map((task) => {\r\n          return JSON.parse(task);\r\n      })\r\n\r\n      tasksArray.forEach(element => {\r\n        element.deadline = new Date(element.deadline);\r\n      });\r\n\r\n      this.tasksList = tasksArray;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className='app'>\r\n        <Header />\r\n        <Main tasks={this.tasksList}/>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}